- hosts: lillejudo
  become: yes
  vars:
    ansible_python_interpreter: "{{ ansible_playbook_python }}"
  tasks:
    - name: Run the equivalent of "apt-get update"
      apt:
        update_cache: yes

    - name: Install docker requirements
      apt:
        pkg:
          - ca-certificates
          - curl
          - gnupg
          - lsb-release

    - name: Add docker gpg key
      shell: curl -fsSL https://download.docker.com/linux/debian/gpg | sudo gpg --dearmor -o /usr/share/keyrings/docker-archive-keyring.gpg

    - name: Setup stable repository
      shell: echo "deb [arch=$(dpkg --print-architecture) signed-by=/usr/share/keyrings/docker-archive-keyring.gpg] https://download.docker.com/linux/debian $(lsb_release -cs) stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null

    - name: Run the equivalent of "apt-get update"
      apt:
        update_cache: yes

    - name: Install docker
      apt:
        pkg:
          - docker-ce
          - docker-ce-cli
          - containerd.io

    - name: Install docker-compose
      apt:
        pkg:
          - docker-compose

    - name: Install nginx
      apt:
        name: nginx

    - name: Remove default nginx conf
      file:
        path: /etc/nginx/sites-enabled/default
        state: absent

    - name: Create new nginx conf
      file:
        path: /etc/nginx/sites-enabled/lillejudo
        state: touch

    - name: Fill new nginx conf
      copy:
        dest: /etc/nginx/sites-enabled/lillejudo
        content: |
          server {
            listen 80;
            listen [::]:80;
            # server_name example.com;
            server_name _;
            root /home/mtop/site-lille-judo/public;
            add_header X-Frame-Options "SAMEORIGIN";
            add_header X-Content-Type-Options "nosniff";
            index index.php;
            charset utf-8;
            location / {
                try_files $uri $uri/ /index.php?$query_string;
            }
            location = /favicon.ico { access_log off; log_not_found off; }
            location = /robots.txt  { access_log off; log_not_found off; }
            error_page 404 /index.php;
            location ~ \.php$ {
                fastcgi_pass unix:/var/run/php/php7.3-fpm.sock;
                fastcgi_param SCRIPT_FILENAME $realpath_root$fastcgi_script_name;
                include fastcgi_params;
            }
            location ~ /\.(?!well-known).* {
                deny all;
            }
          }

    - name: Restart nginx
      service:
        name: nginx
        state: restarted

    - name: Install php and dependencies
      apt:
        pkg:
          - php
          - php-fpm
          - php-bcmath
          - php-ctype
          - php-curl
          - php-fileinfo
          - php-json
          - php-mbstring
          - php-pdo
          - php-tokenizer
          - php-xml
          - php-mysql
          - php-zip
          - git
          - zip
          - unzip

    - name: Download and install Composer
      shell: curl -sS https://getcomposer.org/installer | php
      args:
        chdir: /usr/src/
        creates: /usr/local/bin/composer
        warn: false
      become: yes

    - name: Add Composer to global path
      copy:
        dest: /usr/local/bin/composer
        group: root
        mode: '0755'
        owner: root
        src: /usr/src/composer.phar
        remote_src: yes
      become: yes
